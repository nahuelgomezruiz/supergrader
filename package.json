{
  "name": "supergrader",
  "version": "1.0.0",
  "description": "AI-powered grading assistant for Gradescope",
  "scripts": {
    "build": "npm run build:ts && npm run build:extension",
    "build:ts": "tsc",
    "build:extension": "npm run copy:assets && npm run copy:popup && npm run copy:manifest",
    "build:watch": "tsc --watch",
    "copy:assets": "node -e \"const fs=require('fs');const path=require('path');const srcDir='chrome-extension';const dstDir='dist/chrome-extension';if(!fs.existsSync(dstDir))fs.mkdirSync(dstDir,{recursive:true});['jszip.min.js','styles.css'].forEach(f=>{if(fs.existsSync(path.join(srcDir,f)))fs.copyFileSync(path.join(srcDir,f),path.join(dstDir,f))});if(fs.existsSync(path.join(srcDir,'icons')))fs.cpSync(path.join(srcDir,'icons'),path.join(dstDir,'icons'),{recursive:true})\"",
    "copy:popup": "node -e \"const fs=require('fs');if(fs.existsSync('src/popup.html'))fs.copyFileSync('src/popup.html','dist/popup.html')\"",
    "copy:manifest": "node -e \"const fs=require('fs');if(fs.existsSync('src/manifest.json'))fs.copyFileSync('src/manifest.json','dist/manifest.json')\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/**/*.ts tests/**/*.ts",
    "lint:fix": "eslint src/**/*.ts tests/**/*.ts --fix"
  },
  "devDependencies": {
    "@types/chrome": "^0.0.254",
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "eslint": "^8.54.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "msw": "^1.3.2",
    "ts-jest": "^29.1.1",
    "typescript": "^5.3.2",
    "whatwg-fetch": "^3.6.20"
  },
  "dependencies": {
    "jszip": "^3.10.1"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.ts"
    ],
    "testMatch": [
      "<rootDir>/tests/**/*.test.ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "ts-jest"
    }
  }
}
