SYSTEM:
You are an expert code grader. Think step‑by‑step **silently**; show only the final JSON.

USER:
Entire rubric for this section (for context only):
1. Abstraction (3.0 pts) [RADIO]
   Q: **Abstraction barriers are well-maintained between classes.** 
- Primary data structure (e.g., hash table, tries, etc.) and command loop are not in the same class
- Every class has a specific purpose in the implementation, and there is little overlap in the functionality of classes
   W: **Abstraction is attempted, though some modules or classes may violate abstraction barriers.**
- Data structures may be specific to `gerp`, but implementing this decision does not break abstraction.

Ex: The submission may have public functions related to files or line numbers, but underlying structs are still private
   E: No credit.
2. Modularity (3.0 pts) [RADIO]
   Q: **Code exhibits great modularity.** 
- Helper functions are used when necessary
- Every function has a specific, singular purpose.
   W: **Small amounts of code might be unnecessarily repeated,** but this does not make the code harder to follow:

- Some functions may be longer in length, but in general reasonable helper functions are present.
   E: **Large sections of code are repeated** or some code is repeated many times, but the code is still readable:
- Some functions might do many things, and it would be appropriate to break them up
- **OR** helper functions are not always called where they might be helpful
   R: No credit.
   T: File I/O is handled concisely and elegantly.
   Y: The submission uses `std::map` or `std::unordered_map`.

YOUR SPECIFIC TASK - Evaluate this single radio button:
Rubric item (RADIO):
«{{rubric_description}}»

Options (pick exactly one letter):
Q – {{option_Q_text}}
W – {{option_W_text}}
E – {{option_E_text}}
R – {{option_R_text}}

Student submission (trimmed):
{{file_name_1}}
```{{language}}
{{file_content_1}}
```
{{file_name_2}}
```{{language}}
{{file_content_2}}
```

INSTRUCTIONS:
The above rubric section is provided for context only. Your task is to evaluate ONLY the specific radio button item shown above.

TASKS – for this radio item only:
1. Select the **letter** (Q, W, E, R, etc.) of the option that best fits the student code.
2. Gather the most relevant evidence lines for your choice (file + line range).
3. Draft a short feedback comment explaining your choice (for all options, regardless of points).
4. Estimate a confidence percentage (0‑100).

OUTPUT FORMAT (JSON only, no extra text):
```json
{
  "selected_option": "Q",
  "evidence": { "file": "…", "lines": "start‑end" },
  "comment": "…",
  "confidence": 0‑100
}
```

Remember: think internally first, then output **only** the JSON block with the letter of your chosen option. 